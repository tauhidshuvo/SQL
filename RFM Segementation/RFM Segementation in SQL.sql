-- RFM Segementation: Recency, Frequency, and Monetary information based Segmentation of Customers

-- Creating the Database
CREATE DATABASE IF NOT EXISTS RFM_SALES;
USE RFM_SALES;
CREATE TABLE SALES_SAMPLE_DATA (
    ORDERNUMBER INT(8),
    QUANTITYORDERED DECIMAL(8,2),
    PRICEEACH DECIMAL(8,2),
    ORDERLINENUMBER INT(3),
    SALES DECIMAL(8,2),
    ORDERDATE VARCHAR(16),
    STATUS VARCHAR(16),
    QTR_ID INT(1),
    MONTH_ID INT(2),
    YEAR_ID INT(4),
    PRODUCTLINE VARCHAR(32),
    MSRP INT(8),
    PRODUCTCODE VARCHAR(16),
    CUSTOMERNAME VARCHAR(64),
    PHONE VARCHAR(32),
    ADDRESSLINE1 VARCHAR(64),
    ADDRESSLINE2 VARCHAR(64),
    CITY VARCHAR(16),
    STATE VARCHAR(16),
    POSTALCODE VARCHAR(16),
    COUNTRY VARCHAR(24),
    TERRITORY VARCHAR(24),
    CONTACTLASTNAME VARCHAR(16),
    CONTACTFIRSTNAME VARCHAR(16),
    DEALSIZE VARCHAR(10)
);
-- inspection data
-- Inspecting Data
SELECT * FROM SALES_SAMPLE_DATA LIMIT 10;
SELECT COUNT(*) FROM SALES_SAMPLE_DATA;-- 2823
-- Checking unique values
select distinct status from SALES_SAMPLE_DATA;
select distinct year_id from SALES_SAMPLE_DATA;
select distinct PRODUCTLINE from SALES_SAMPLE_DATA;
select distinct COUNTRY from SALES_SAMPLE_DATA;
select distinct DEALSIZE from SALES_SAMPLE_DATA;
select distinct TERRITORY from SALES_SAMPLE_DATA;
SELECT DISTINCT
    MONTH_ID
FROM
    SALES_SAMPLE_DATA
WHERE
    year_id = 2005
ORDER BY 1;
select YEAR_ID,
sum(SALES)as revenue
from sales_sample_data
group by 1
order by 1;
select YEAR_ID,
MONTH_ID,
sum(SALES)as revenue
from sales_sample_data
group by 1,2
order by 1,2;
-- Analysis

-- Let's start by grouping sales by productline
SELECT ORDERLINENUMBER,ORDERNUMBER,PRODUCTLINE, SALES, 
       ORDERDATE, STATUS, QTR_ID, MONTH_ID, YEAR_ID,
       MSRP, PRODUCTCODE, CUSTOMERNAME, PHONE, 
       ADDRESSLINE1, ADDRESSLINE2, CITY, STATE, 
       POSTALCODE, COUNTRY, TERRITORY, 
       CONTACTLASTNAME, CONTACTFIRSTNAME, DEALSIZE
FROM SALES_SAMPLE_DATA
ORDER BY 1, 2
LIMIT 100;

select PRODUCTLINE, ROUND(sum(sales),0) AS Revenue, COUNT(DISTINCT ORDERNUMBER) AS NO_OF_ORDERS
from SALES_SAMPLE_DATA
group by PRODUCTLINE
order by 3 desc;
select YEAR_ID, sum(sales) Revenue
from SALES_SAMPLE_DATA
group by 1
order by 2 desc;
select DEALSIZE,sum(SALES)as revenue
from sales_sample_data
group by 1
order by 2 desc;
select PRODUCTLINE,sum(SALES)as revenue,count(ORDERNUMBER) as frequency
from sales_sample_data
where YEAR_ID = 2004 and MONTH_ID = 11 -- change year to see the rest
group by 1,MONTH_ID
order by 2 desc;
-- What was the best month for sales in a specific year? How much was earned that month? 
select  MONTH_ID, sum(sales) Revenue, count(ORDERNUMBER) Frequency
from SALES_SAMPLE_DATA
where YEAR_ID = 2004 -- change year to see the rest
group by  MONTH_ID
order by 2 desc;
-- Who is our best customer (this could be best answered with RFM)
-- SELECT DATE_FORMAT(STR_TO_DATE(ORDERDATE, '%d/%m/%y'), '%Y-%m-%d') AS converted_date 
-- FROM SALES_SAMPLE_DATA;
SELECT ORDERDATE FROM SALES_SAMPLE_DATA LIMIT 5;
SELECT STR_TO_DATE(ORDERDATE, '%d/%m/%y') AS `Date` FROM SALES_SAMPLE_DATA LIMIT 5;
SELECT MAX(STR_TO_DATE(ORDERDATE, '%d/%m/%y')) AS LATESTDATE from SALES_SAMPLE_DATA; -- 2005-05-31: Last Transaction Date
SELECT MIN(STR_TO_DATE(ORDERDATE, '%d/%m/%y')) AS EARLIESTDATE from SALES_SAMPLE_DATA; -- 2003-01-06 : First Transaction Date
SELECT 
    DATEDIFF(MAX(STR_TO_DATE(ORDERDATE, '%d/%m/%y')), MIN(STR_TO_DATE(ORDERDATE, '%d/%m/%y'))) AS 'Range' 
    FROM SALES_SAMPLE_DATA; -- Range of Transaction is 876 Days
SELECT
	CUSTOMERNAME,
    ROUND(SUM(SALES),0) AS MonetaryValue,
    COUNT(DISTINCT ORDERNUMBER) AS Frequency,
    -- MAX(STR_TO_DATE(ORDERDATE,' %d/%m/%y')) AS EACH_CUSTOMERS_LAST_TRANSACTION_DATE,
    -- (SELECT MAX(STR_TO_DATE(ORDERDATE, '%d/%m/%y')) FROM SALES_SAMPLE_DATA) AS BUSINESS_LAST_TRANSACTION_DATE,
    DATEDIFF(MAX(STR_TO_DATE(ORDERDATE, '%d/%m/%y')), (SELECT MAX(STR_TO_DATE(ORDERDATE, '%d/%m/%y')) FROM SALES_SAMPLE_DATA))*-1   AS Recency
FROM SALES_SAMPLE_DATA
GROUP BY CUSTOMERNAME;
 -- SELECT * FROM cte where  CUSTOMERNAME LIKE "Alpha%";
CREATE OR REPLACE VIEW RFM_SEGMENT AS 
WITH RFM_INITIAL_CALC AS (
   SELECT
    CUSTOMERNAME,
    ROUND(SUM(SALES),0) AS MonetaryValue,
    COUNT(DISTINCT ORDERNUMBER) AS Frequency,
    -- MAX(STR_TO_DATE(ORDERDATE,' %d/%m/%y')) AS EACH_CUSTOMERS_LAST_TRANSACTION_DATE,
    -- (SELECT MAX(STR_TO_DATE(ORDERDATE, '%d/%m/%y')) FROM SALES_SAMPLE_DATA) AS BUSINESS_LAST_TRANSACTION_DATE,
    DATEDIFF(MAX(STR_TO_DATE(ORDERDATE, '%d/%m/%y')), (SELECT MAX(STR_TO_DATE(ORDERDATE, '%d/%m/%y')) FROM SALES_SAMPLE_DATA)) * (-1) AS Recency
FROM SALES_SAMPLE_DATA
GROUP BY CUSTOMERNAME
),
RFM_SCORE_CALC AS (
    SELECT 
        C.*,
        NTILE(4) OVER (ORDER BY C.Recency DESC) AS RFM_RECENCY_SCORE,
        NTILE(4) OVER (ORDER BY C.Frequency ASC) AS RFM_FREQUENCY_SCORE,
        NTILE(4) OVER (ORDER BY C.MonetaryValue ASC) AS RFM_MONETARY_SCORE
    FROM 
        RFM_INITIAL_CALC AS C
)
SELECT
    R.CUSTOMERNAME,
    (R.RFM_RECENCY_SCORE + R.RFM_FREQUENCY_SCORE + R.RFM_MONETARY_SCORE) AS TOTAL_RFM_SCORE,
    CONCAT_WS(
		'', R.RFM_RECENCY_SCORE, R.RFM_FREQUENCY_SCORE, R.R.RFM_MONETARY_SCORE
    ) AS RFM_CATEGORY_COMBINATION
FROM 
    RFM_SCORE_CALC AS R;
    select * from rfm_segment;
    SELECT DISTINCT
    RFM_CATEGORY_COMBINATION
FROM
    RFM_SEGMENT
ORDER BY 1 DESC;
SELECT 
    CUSTOMERNAME,
    CASE
        WHEN RFM_CATEGORY_COMBINATION IN (111, 112, 121, 132, 211, 211, 212, 114, 141) THEN 'CHURNED CUSTOMER'
        WHEN RFM_CATEGORY_COMBINATION IN (133, 134, 143, 24, 334, 343, 344, 144) THEN 'SLIPPING AWAY, CANNOT LOSE'
        WHEN RFM_CATEGORY_COMBINATION IN (311, 411, 331) THEN 'NEW CUSTOMERS'
        WHEN RFM_CATEGORY_COMBINATION IN (222, 231, 221,  223, 233, 322) THEN 'POTENTIAL CHURNERS'
        WHEN RFM_CATEGORY_COMBINATION IN (323, 333,321, 341, 422, 332, 432) THEN 'ACTIVE'
        WHEN RFM_CATEGORY_COMBINATION IN (433, 434, 443, 444) THEN 'LOYAL'
    ELSE 'CANNOT BE DEFINED'
    END AS CUSTOMER_SEGMENT

FROM RFM_SEGMENT;
WITH CTE1 AS
(SELECT 
    CUSTOMERNAME,
    CASE
        WHEN RFM_CATEGORY_COMBINATION IN (111, 112, 121, 123, 132, 211, 211, 212, 114, 141) THEN 'CHURNED CUSTOMER'
        WHEN RFM_CATEGORY_COMBINATION IN (133, 134, 143, 244, 334, 343, 344, 144) THEN 'SLIPPING AWAY, CANNOT LOSE'
        WHEN RFM_CATEGORY_COMBINATION IN (311, 411, 331) THEN 'NEW CUSTOMERS'
        WHEN RFM_CATEGORY_COMBINATION IN (222, 231, 221,  223, 233, 322) THEN 'POTENTIAL CHURNERS'
        WHEN RFM_CATEGORY_COMBINATION IN (323, 333,321, 341, 422, 332, 432) THEN 'ACTIVE'
        WHEN RFM_CATEGORY_COMBINATION IN (433, 434, 443, 444) THEN 'LOYAL'
    ELSE 'CANNOT BE DEFINED'
    END AS CUSTOMER_SEGMENT
FROM RFM_SEGMENT)

SELECT 
    CUSTOMER_SEGMENT, count(*) as Number_of_Customers
FROM CTE1
GROUP BY 1
ORDER BY 2 DESC;


